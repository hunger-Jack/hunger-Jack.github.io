<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>魔尊重楼</title>
  
  <subtitle>前端博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jirengujack.cn/"/>
  <updated>2018-01-09T19:05:40.000Z</updated>
  <id>http://jirengujack.cn/</id>
  
  <author>
    <name>Harry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常见问题总结</title>
    <link href="http://jirengujack.cn/2018/01/10/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://jirengujack.cn/2018/01/10/常见问题总结/</id>
    <published>2018-01-09T18:44:54.000Z</published>
    <updated>2018-01-09T19:05:40.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="npm-run-build不成功"><a href="#npm-run-build不成功" class="headerlink" title="npm run build不成功"></a>npm run build不成功</h3><p>使用vue-cli，并且使用router的时候，build之后页面没有任何报错，但是页面出现空白，可能有两个原因：</p><ol><li>build配置路径错误</li><li>router使用了‘history’</li></ol><a id="more"></a><p>解决方法：</p><ol><li><p>在config/inde.js找到以下代码，修改assetsPulicPath的路径</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">build: &#123;</span><br><span class="line">    <span class="comment">// Template for index.html</span></span><br><span class="line">    index: path.resolve(__dirname, <span class="string">'../dist/index.html'</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Paths</span></span><br><span class="line">    assetsRoot: path.resolve(__dirname, <span class="string">'../dist'</span>),</span><br><span class="line">    assetsSubDirectory: <span class="string">'static'</span>,</span><br><span class="line">    assetsPublicPath: <span class="string">'/'</span>,<span class="comment">//在这一行把路径改一下，</span></span><br><span class="line">     ...<span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 举个例子：例如本地的整个项目名称为resume，build生成dist的路径为resume/dist，通过github pages来展示页面，在github里面，本地的resume对应远程仓库名称为resume，github pages页面提供的网址是yourname/github.io/resume，那么这里的路径就要改成/resume/dist/.</p></li><li>打开src自己配置的router文件，里面的mode: ‘history’删除了就可以了。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;npm-run-build不成功&quot;&gt;&lt;a href=&quot;#npm-run-build不成功&quot; class=&quot;headerlink&quot; title=&quot;npm run build不成功&quot;&gt;&lt;/a&gt;npm run build不成功&lt;/h3&gt;&lt;p&gt;使用vue-cli，并且使用router的时候，build之后页面没有任何报错，但是页面出现空白，可能有两个原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;build配置路径错误&lt;/li&gt;
&lt;li&gt;router使用了‘history’&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="常见问题总结" scheme="http://jirengujack.cn/categories/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
      <category term="vue-cli" scheme="http://jirengujack.cn/categories/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/vue-cli/"/>
    
    
      <category term="常见问题" scheme="http://jirengujack.cn/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
      <category term="vue" scheme="http://jirengujack.cn/tags/vue/"/>
    
      <category term="vue-cli" scheme="http://jirengujack.cn/tags/vue-cli/"/>
    
  </entry>
  
  <entry>
    <title>Hexo常见问题和配置</title>
    <link href="http://jirengujack.cn/2018/01/07/Hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://jirengujack.cn/2018/01/07/Hexo常见问题和配置/</id>
    <published>2018-01-07T15:48:08.000Z</published>
    <updated>2018-01-09T19:06:50.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="异地管理博客"><a href="#异地管理博客" class="headerlink" title="异地管理博客"></a>异地管理博客</h3><p>如果使用多台电脑发布更新博客，我自己的做法是在同一个远程仓库建立两个分支：</p><ol><li>master分支，用户保存hexo里的public文件里面的内容，也就是hexo生成的博客文件。</li><li>hexo分支，用户保存所有的hexo的源文件【可能会暴露源文件secret key】</li></ol><a id="more"></a><h4 id="基础假设"><a href="#基础假设" class="headerlink" title="基础假设"></a>基础假设</h4><ol><li>已经搭建好hexo</li><li>已经配置好next主题</li><li>已经关联了github，可以使用github直接访问博客首页</li><li>具体的简单操作没有截图，如果不会自行搜索即可找到答案</li></ol><h4 id="创建本地git仓库"><a href="#创建本地git仓库" class="headerlink" title="创建本地git仓库"></a>创建本地git仓库</h4><p>首先需要删除next下面的git配置，否则无法把next主题文件同步到远程仓库，进入到hexo根目录执行以下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -fr ./themes/next/.git/</span><br></pre></td></tr></table></figure></p><p>然后初始化hexo根目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></p><p>创建一个.gitignore文件，放在hexo根目录，内容为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure></p><h4 id="创建远程仓库的分支"><a href="#创建远程仓库的分支" class="headerlink" title="创建远程仓库的分支"></a>创建远程仓库的分支</h4><p>目前远程仓库已经有一个默认的master分支，然后自己创建一个hexo分支，并且把hexo设置为默认分支，方便手动操作push本地源文件。<br><img src="https://i.loli.net/2018/01/09/5a53a76ea4c8a.png" alt=""><br><img src="https://i.loli.net/2018/01/09/5a53a8565d7f8.png" alt=""></p><h4 id="push本地源文件到远程仓库hexo分支"><a href="#push本地源文件到远程仓库hexo分支" class="headerlink" title="push本地源文件到远程仓库hexo分支"></a>push本地源文件到远程仓库hexo分支</h4><p>进入到hexo根目录，使用终端打开一次执行以下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &apos;push to hexo&apos;</span><br><span class="line">git push origin master:hexo</span><br></pre></td></tr></table></figure></p><p>这时候你可以看到远程仓库已经有本地的hexo源文件。以后每次发布博客之后就可以操作以上代码更新本地源文件到远程仓库的hexo分支了。<br>提醒：如操作过程中有其他报错小问题，需要自行google，这里只是说一个大概思路。</p><h3 id="next主题同步到远程仓库"><a href="#next主题同步到远程仓库" class="headerlink" title="next主题同步到远程仓库"></a>next主题同步到远程仓库</h3><p>我使用的是以下代码，可以同步到远程仓库hexo，但是具体原因不知道，就是成功了。上方提到的直接删除thems/next 下面的.git 文件我自己没有尝试，不知道有没有起作用<br>进入hexo根目录执行以下代码即可创建next主题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --recursive https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>使用这种方式下载next主题就可以直接同步提交到远程仓库，但是后期更新的还不懂。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;异地管理博客&quot;&gt;&lt;a href=&quot;#异地管理博客&quot; class=&quot;headerlink&quot; title=&quot;异地管理博客&quot;&gt;&lt;/a&gt;异地管理博客&lt;/h3&gt;&lt;p&gt;如果使用多台电脑发布更新博客，我自己的做法是在同一个远程仓库建立两个分支：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;master分支，用户保存hexo里的public文件里面的内容，也就是hexo生成的博客文件。&lt;/li&gt;
&lt;li&gt;hexo分支，用户保存所有的hexo的源文件【可能会暴露源文件secret key】&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="web前端" scheme="http://jirengujack.cn/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Hexo" scheme="http://jirengujack.cn/tags/Hexo/"/>
    
      <category term="Next" scheme="http://jirengujack.cn/tags/Next/"/>
    
  </entry>
  
</feed>
